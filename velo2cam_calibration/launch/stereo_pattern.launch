<launch>

  <arg name="stdout" default="screen" />
  <arg name="camera_name" default="/stereo_camera" />
  <arg name="image_topic" default="image_rect_color" />
  <arg name="frame_name" default="stereo_camera" />
  <arg name="sensor_id" default="0" />

  <!-- Full disparity to pointcloud -->
  <group ns="$(arg camera_name)">
    <!-- Manager + nodelet -->
    <node pkg="nodelet" type="nodelet" name="stereo_manager_$(arg sensor_id)" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="disparity"
      args="load stereo_image_proc/disparity stereo_manager_$(arg sensor_id)">
      <rosparam>
        disparity_range: 128
        correlation_window_size: 5
        stereo_algorithm: 1
        prefilter_cap: 63
        uniqueness_ratio: 10.0
        speckle_size: 100
        speckle_range: 2
        P1: 216
        P2: 864
        disp12MaxDiff: 1
      </rosparam>
      <remap from="left/image_rect" to="left/$(arg image_topic)"/>
      <remap from="right/image_rect" to="right/$(arg image_topic)"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="pointclouder_full"
      args="load stereo_image_proc/point_cloud2 stereo_manager_$(arg sensor_id) _queue_size:=100">
    </node>
  </group>

  <!-- Edge detection -->
  <node name="edge_detection" pkg="opencv_apps" type="edge_detection" output="$(arg stdout)" >
    <remap from="image" to="$(arg camera_name)/left/$(arg image_topic)" />
    <rosparam>
      use_camera_info: False
      debug_view: False
      edge_type: 0
      canny_threshold1: 100
      canny_threshold2: 200
      apertureSize: 3
      apply_blur_pre: True
      postBlurSize: 13
      postBlurSigma: 3.2
      apply_blur_post: False
      L2gradient: False
    </rosparam>
  </node>

  <!-- Masked disparity - only edges -->
  <node name="v2c_disp_masker" pkg="velo2cam_calibration" type="v2c_disp_masker" output="$(arg stdout)" >
    <remap from="~image" to="$(arg camera_name)/disparity" />
    <remap from="~mask" to="edge_detection/image" />
    <remap from="~output" to="$(arg camera_name)/edges_disparity" />
    <rosparam>
      edges_threshold: 128
    </rosparam>
  </node>

  <!-- Masked disparity to pointcloud -->
  <group ns="$(arg camera_name)">
    <!-- Manager + nodelet -->
    <node pkg="nodelet" type="nodelet" name="pointclouder_manager_edges" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="pointclouder_edges"
      args="load stereo_image_proc/point_cloud2 pointclouder_manager_edges _queue_size:=100"
      respawn="true">
      <remap from="disparity" to="edges_disparity"/>
      <remap from="points2" to="edge_points2"/>
    </node>
  </group>

  <!-- PCL generic nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="stereo_pcl_manager_$(arg sensor_id)" args="manager" output="$(arg stdout)"/>

  <!-- Masked cloud pass through -->
  <node pkg="nodelet" type="nodelet" name="edges_pass_through_z" args="load pcl/PassThrough stereo_pcl_manager_$(arg sensor_id)" output="$(arg stdout)">
    <remap from="~input" to="$(arg camera_name)/edge_points2" />
    <remap from="~output" to="$(arg camera_name)/edge_z_filtered_cloud" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.8
      filter_limit_max: 3
      filter_limit_negative: false
      max_queue_size: 1
      keep_organized: false
    </rosparam>
  </node>

  <!-- Full cloud pass through -->
  <node pkg="nodelet" type="nodelet" name="full_pass_through_z" args="load pcl/PassThrough stereo_pcl_manager_$(arg sensor_id)" output="$(arg stdout)">
    <remap from="~input" to="$(arg camera_name)/points2" />
    <remap from="~output" to="$(arg camera_name)/z_filtered_cloud" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.8
      filter_limit_max: 3
      filter_limit_negative: false
      max_queue_size: 1
      keep_organized: false
    </rosparam>
  </node>

  <!-- Plane finding on the full cloud -->
  <node pkg="velo2cam_calibration" type="v2c_plane_segmentation" name="planar_segmentation" output="$(arg stdout)" required="true">
    <remap from="~input"   to="$(arg camera_name)/z_filtered_cloud" />
    <rosparam>
      segmentation_type: 1
      axis: [0.0, 1.0, 0.0]
      threshold: 0.1
      eps_angle: 0.55
    </rosparam>
  </node>

  <!-- Extract plane cloud -->
  <node pkg="nodelet" type="nodelet" name="extract_plane_indices" args="load pcl/ExtractIndices stereo_pcl_manager_$(arg sensor_id)" output="screen">
    <remap from="~input"   to="$(arg camera_name)/z_filtered_cloud" />
    <remap from="~indices" to="/planar_segmentation/inliers" />
    <rosparam>
      negative: false
    </rosparam>
  </node>

  <!-- Our node -->
  <node pkg="velo2cam_calibration" type="stereo_pattern" name="stereo_pattern_$(arg sensor_id)" output="screen">
    <remap from="~cloud2" to="$(arg camera_name)/edge_z_filtered_cloud"/>
    <remap from="~cam_plane_coeffs" to="/planar_segmentation/model"/>
  </node>

  <!-- Extract circles cloud -->
  <node pkg="nodelet" type="nodelet" name="extract_circle_indices" args="load pcl/ExtractIndices stereo_pcl_manager_$(arg sensor_id)" output="screen">
    <remap from="~input"   to="/velo2cam_calibration/z_filtered_cloud" />-
    <remap from="~indices" to="/velo2cam_calibration/inliers" />
    <rosparam>
      negative: false
    </rosparam>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="stereo_ros_tf" args="0 0 0 -1.57079632679 0 -1.57079632679 rotated_$(arg frame_name) $(arg frame_name) 100"/>
</launch>
